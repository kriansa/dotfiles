# -- General settings
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

setw -g xterm-keys on
set -s escape-time 10
set -sg repeat-time 600
set -s focus-events on

set -g prefix2 C-a
bind C-a send-prefix -2

setw -q -g utf8 on

set -g history-limit 5000

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display 'Config reloaded'

# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# Update the status line every second
set -g status-interval 1
set -g mouse on

# Dracula Color Pallette
white='#f8f8f2'
gray='#44475a'
dark_gray='#282a36'
light_purple='#bd93f9'
dark_purple='#6272a4'
cyan='#8be9fd'
green='#50fa7b'
orange='#ffb86c'
red='#ff5555'
pink='#ff79c6'
yellow='#f1fa8c'

# Display the session name
set -g status-left "#{?session_name,#[bg=$green]#[fg=$dark_gray] #S #[default],}"
# set -g status-left "#[bg=$green,fg=$dark_gray] #{?session_name,#S,} #[default]"
set -g status-right ""
set -g status-justify left
set -g status-left-length 100

set -g window-status-bell-style "bold"
set -g window-status-activity-style "bold"
set -g status-style "bg=$dark_gray"
set -g window-status-current-style "bg=$dark_purple"
set -g window-status-separator ''  # No spaces between windows in the status bar.
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "

# Show the tab bar only when there's at least 2 windows open
if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# window navigation
unbind n
unbind p

# resize
bind-key -n C-F10 resize-pane -Z

# new window
bind-key -n M-t new-window -c "#{pane_current_path}"

# navigate between window (tabs)
bind -n C-F9 next-window
bind -n C-F8 previous-window
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# switch panels without cycling through
bind -n M-h if -F '#{pane_at_left}' '' 'select-pane -L'
bind -n M-l if -F '#{pane_at_right}' '' 'select-pane -R'
bind -n M-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -n M-k if -F '#{pane_at_top}' '' 'select-pane -U'

# pane resizing
bind -n M-H resize-pane -L 2
bind -n M-J resize-pane -D 2
bind -n M-K resize-pane -U 2
bind -n M-L resize-pane -R 2

# splitting windows
bind -n M-d split-window -h
bind -n M-D split-window

bind Enter copy-mode # enter copy mode
