#!/usr/bin/env bash
#
# This small script is used to centralize all commands I use to keep my computer updated and run
# them interactively without having to remember each one since this is such a repetitive process

main() {
  echo -e "\033[1;33mStarting system upgrade\033[0m"

  if [ "$(uname)" == "Darwin" ]; then
    run "Update homebrew packages" "brew upgrade"
  else
    run "Update system packages" "sudo pacman -Syu"
    run "Update AUR packages" "pacom upgrade -a"
  fi

  run "Update Ruby and its global packages" "update-ruby"
  run "Update Node and its global packages" "update-node"
  run "Update Python global packages" "update-python-packages"
  run "Updating fish completions" "fish -c fish_update_completions"
}

run() {
  local desc=$1; shift
  local command=$*
  local len=$(( ${#desc} + 2 ))

  echo
  printf -- "-%.0s" $(seq 1 $len)
  echo
  echo -e "\033[0;32mâ€¢\033[0m \033[1m$desc\033[0m"
  echo -e "\033[0;33m+\033[0m \033[2m$command\033[0m"
  printf -- "-%.0s" $(seq 1 $len)
  echo

  # Reset timer
  SECONDS=0

  if ! eval "$command"; then
    echo -e "\033[0;31mCommand \`\033[2m$command\033[0;31m\` failed in \033[1m$(show-time)\033[0m"
    exit 1
  else
    echo -e "Command \`\033[2m$command\033[0m\` finished in \033[1m$(show-time)\033[0m"
  fi
}

show-time() {
  if [ "$(uname)" == "Darwin" ]; then
    TZ=UTC date -jf "%s" "$SECONDS" "+%H:%M:%S"
  else
    TZ=UTC date -d@$SECONDS -u +%H:%M:%S
  fi
}

main
