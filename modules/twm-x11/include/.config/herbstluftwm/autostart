#!/usr/bin/env bash

hc() {
  herbstclient "$@"
}

hc emit_hook reload

# ======================================================
# bindings
# ======================================================

# remove all existing keybindings
hc keyunbind --all

# use the super key as the main modifier
Mod=Mod4
Alt=Mod1

hc keybind $Mod-Control-q quit
hc keybind $Mod-Control-r reload
hc keybind $Mod-q close_or_remove
hc keybind $Mod-Return spawn launcher-menu
hc keybind $Alt-Control-Delete spawn power-menu
hc keybind $Alt-Control-c spawn qalculate-gtk

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Control-h     shift left
hc keybind $Mod-Control-j     shift down
hc keybind $Mod-Control-k     shift up
hc keybind $Mod-Control-l     shift right

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Shift-h       resize left +$resizestep
hc keybind $Mod-Shift-j       resize down +$resizestep
hc keybind $Mod-Shift-k       resize up +$resizestep
hc keybind $Mod-Shift-l       resize right +$resizestep

# tags
tag_names=(1 2 3 4)
tag_keys=(1 2 3 4)

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Control-$key" move_index "$i"
    fi
done

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 horizontal vertical max \
               , and . compare tags.focus.curframe_wcount = 1                   \
                     . cycle_layout +1 vertical max \
               , cycle_layout +1

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-t floating toggle                               # [t]iling toggle
# Mod-Shift are shortcut variants that affects just the focused window
hc keybind $Mod-Shift-t set_attr clients.focus.floating toggle  # [t]iling toggle
hc keybind $Mod-Shift-f fullscreen toggle                       # [f]ullscreen toggle
hc keybind $Mod-Shift-p pseudotile toggle                       # [p]seudotile toggle
hc keybind $Mod-Shift-b set_attr clients.focus.decorated toggle # [b]orders toggle
hc keybind $Mod-Shift-Return spawn "$HOME/.dotfiles/modules/twm-x11/libexec/hlwm-toggle-monitor-layout" max
# hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
# hc keybind $Mod-Control-m jumpto last-minimized

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-Shift-d       chain , split bottom 0.5 , focus down
hc keybind $Mod-d             chain , split right  0.5 , focus right
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c           cycle
hc keybind $Mod-Shift-c     cycle -1

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# Common keyboard multimedia keys
hc keybind XF86AudioMute spawn volume mute
hc keybind XF86AudioLowerVolume spawn volume decrease
hc keybind XF86AudioRaiseVolume spawn volume increase
hc keybind Shift-XF86AudioMute spawn volume --input mute
hc keybind Shift-XF86AudioLowerVolume spawn volume --input decrease
hc keybind Shift-XF86AudioRaiseVolume spawn volume --input increase
hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPrev spawn playerctl previous

# Screenshot
hc keybind Print spawn flameshot gui
# automatically saves the screen shot (3 = full screen, 4 = selection)
hc keybind $Alt-Shift-4 spawn flameshot gui
hc keybind $Alt-Shift-3 spawn flameshot gui
# variants that copies file to clipboard (3 = full screen, 4 = selection)
hc keybind $Alt-Shift-Control-4 spawn flameshot gui
hc keybind $Alt-Shift-Control-3 spawn flameshot gui

# Laptop multimedia keys
hc keybind Mod4+p spawn arandr
hc keybind XF86KbdLightOnOff spawn keyboard-light toggle
hc keybind XF86MonBrightnessUp spawn monitor-brightness up
hc keybind XF86MonBrightnessDown spawn monitor-brightness down
hc keybind XF86Launch1 spawn spotify
hc keybind XF86Calculator spawn qalculate-gtk

# K3 multimedia keys
hc keybind XF86_LaunchB spawn $HOME/.dotfiles/modules/twm-x11/libexec/hlwm-toggle-monitor-layout grid

# ======================================================
# theme
# ======================================================
source "$HOME/.config/herbstluftwm/theme.sh"

# frame theming
hc set frame_bg_transparent off   # when on, frame_bg_*_color are disabled
# hc set frame_transparent_width 5  # border of the frame when bg_transparent is on
hc set frame_bg_active_color $color_transparent   # enabled only when bg_transpartent is off
hc set frame_bg_normal_color $color_transparent   # enabled only when bg_transpartent is off

# set opacity of frame bg and its border (unless bg is transparent)
hc set frame_active_opacity 100
hc set frame_normal_opacity 100
hc set frame_border_inner_color $(argb text_primary_bg 30)
hc set frame_border_active_color $(argb primary 60)
hc set frame_border_normal_color $(argb primary 15)
hc set frame_border_inner_width 1 # this is included in border_width
hc set frame_border_width 2       # total width, includes the inner width
hc set frame_gap 2                # gap (margin) between frames
hc set frame_padding 0            # use the window gap instead
hc set window_gap 4               # gap between windows on tiling mode

# hide frame gaps and borders when there's only one visible in the monitor
hc set smart_frame_surroundings hide_all

# enable theme.minimal when only one window is visible in the frame
hc set smart_window_surroundings off

# theme hierarchy for windows
#
# theme: [root], (root theme works like a default while all its children will override its settings)
#   [root].active,
#   [root].normal,
#   [root].urgent,
#   floating
#     floating.active
#     floating.normal
#     floating.urgent
#   fullscreen
#     fullscreen.active
#     fullscreen.normal
#     fullscreen.urgent
#   tiling
#     tiling.active
#     tiling.normal
#     tiling.urgent
#   minimal (configures clients with minimal decorations triggered by smart_window_surroundings)
#     minimal.active
#     minimal.normal
#     minimal.urgent

# reset all
hc attr theme.reset yes
hc attr theme.active.reset yes
hc attr theme.normal.reset yes
hc attr theme.urgent.reset yes
hc attr theme.tiling.reset yes
hc attr theme.floating.reset yes
hc attr theme.fullscreen.reset yes
hc attr theme.minimal.reset yes

# etc
hc attr theme.background_color "$(argb primary 70)" # visible only on resize

# title bar
hc attr theme.title_when one_tab
hc attr theme.title_height 20
hc attr theme.title_align center
hc attr theme.title_font 'Roboto Condensed:pixelsize=16'
hc attr theme.title_depth 6 # space below the title's baseline
hc attr theme.title_color "$color_text_primary_bg"
hc attr theme.color "$color_primary"
hc attr theme.tab_color "$(argb primary 70)"
hc attr theme.tab_title_color $color_text_secondary_bg
hc attr theme.padding_top 0

# borders
hc attr theme.inner_width 1
hc attr theme.outer_width 0
hc attr theme.border_width 4 # this has to accomodate both inner and outer borders
hc attr theme.inner_color $color_text_primary_bg

# overrides for non focused windows (inactive)
hc attr theme.normal.color $(argb primary 70)
hc attr theme.normal.tab_color $(argb primary 50)
hc attr theme.normal.background_color $(argb secondary 70) # visible only on resize

# overrides for urgent windows
hc attr theme.urgent.color $(rgb pink)
hc attr theme.urgent.background_color $(argb pink 70) # visible only on resize

# overrides for floating windows
hc attr theme.floating.title_when always

# ======================================================
# general behavior
# ======================================================

# On layouts where windows can be covered by others, hide the ones below so transparency shows the
# background, not the window below it.
hc set hide_covered_windows on

# show all frames, including empty ones
hc set show_frame_decorations all

# configure mouse behavior
hc set focus_follows_mouse on
hc set mouse_recenter_gap 50

# useful for printing a nice ascii tree
hc set tree_style '╾│ ├└╼─┐'

# ======================================================
# rules
# ======================================================
hc unrule --all
hc rule focus=on # normally focus new clients
hc rule floatplacement=center
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_SPLASH' focus=off
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule fixedsize floating=on

# specific app rules
#hc rule class=XTerm tag=3 # move all xterms to tag 3
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule class=Arandr floating=on
hc rule class=Qalculate-gtk floating=on
hc rule class=Pavucontrol floating=on
hc rule class=firefox windowtype='_NET_WM_WINDOW_TYPE_UTILITY' manage=off
hc rule class=Pcmanfm title="Execute File" pseudotile=on

# move to specific tags
hc rule class=Spotify tag=2
hc rule class=obs tag=2
hc rule class=discord tag=3
hc rule class=Slack tag=3

# unlock, allowing monitors to repaint
hc unlock

# and run it once we start/reload
hc detect_monitors

# set the default layout to horizontal
test "$(hc list_clients | wc -l)" -eq 0 && hc set_layout horizontal
