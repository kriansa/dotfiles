#!/usr/bin/env bash
#
# Desktop Handler for Watchmon
# Receives a payload from watchmon and automatically configure the displays using xrandr

# Configure monitor aliases so we can easily identify them on the `setup` below.
# You can omit this completely if you want to refer to them by IDs instead.
declare EDID_ALIASES=(
  7B59785F:LAPTOP
  # This is the same monitor that shows different EDIDs at different ocasions.
  047F801B:PRIMARY
  93F8B109:PRIMARY
  266B2343:PRIMARY
)

# Variables that hold the current monitor configuration
declare MONITORS MONITORS_COUNT MONITORS_STRING

setup() {
  # Single monitor: just enable it as primary
  if [ $MONITORS_COUNT = 1 ]; then
    xrandrw --outputs-off --output "${MONITORS_STRING%:*}" --auto --primary
    return
  fi

  # Multi-monitor setup
  case "$MONITORS_STRING" in
    # ========================================================
    # Known monitor combinations
    # ========================================================
    eDP-1:LAPTOP+DP-1:PRIMARY) # Primary desk configuration
      xrandrw --outputs-off --output DP-1 --auto --pos 0x0 --primary \
        --output eDP-1 --auto --pos 3440x1200
      ;;

    # ========================================================
    # Handle exceptional cases: no monitor or no configuration
    # ========================================================
    "")
      xrandrw --outputs-off
      echo "No monitor plugged in."
      return 1 # Doesn't execute post_setup
      ;;

    *)
      # Enables all, but still warns the user
      for monitor in "${MONITORS[@]}"; do
        params+=(--output "${monitor%:*}" --auto)
      done

      xrandrw --outputs-off "${params[@]}"

      echo "Monitor combination not configured: [$MONITORS_STRING]"
      notify-send "Monitor combination not configured" \
        "Configuration string: $MONITORS_STRING\nRun 'Arandr' to configure it manually."
      ;;
  esac
}

# Do any operation prior to the monitor rearrangement such as killing apps that don't handle display
# readjustments very well or might have unexpected behavior while doing so
pre_setup() {
  # Stop polybar so it doesn't need to overthink about which monitor to use
  systemctl --user stop polybar
}

post_setup() {
  # Set background
  feh --bg-fill --no-fehbg ~/.local/share/backgrounds/2021-10-02-18-55-51-bridge.png

  # Set random background
  # feh --bg-fill --no-fehbg --randomize ~/.local/share/backgrounds

  # Ensure polybar is started as it might shutdown when no monitors are found
  systemctl --user start polybar

  # Reconfigure monitors
  herbstclient detect_monitors
}

# Get all monitors in an array and as a single string, joined by +
MONITORS=($@)
MONITORS_COUNT=$#
IFS="+"; MONITORS_STRING="$*"; IFS=$'\n'

# Replace EDID hashes by aliases if we have them
if [ ${#EDID_ALIASES} -ne 0 ]; then
  for alias in "${EDID_ALIASES[@]}"; do
    edid="${alias%:*}"
    name="${alias#*:}"
    sed_args+=(-e "s/:$edid/:$name/")
  done
  MONITORS_STRING=$(sed "${sed_args[@]}" <<< "$MONITORS_STRING")
fi

echo "dh-watchmon called with: [$@]"
pre_setup && setup && post_setup
