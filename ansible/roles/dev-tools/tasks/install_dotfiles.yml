---
- ansible.builtin.stat: path={{ dotfiles_path }}
  register: dotfiles_exist

- when: dotfiles_exist.stat.exists == false
  block:
    - name: download dotfiles
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.git:
        repo: https://github.com/kriansa/dotfiles.git
        dest: "{{ dotfiles_path }}"
        update: no

    - name: update dotfiles remote to use SSH instead of HTTPS
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.command: git remote set-url origin git@github.com:kriansa/dotfiles.git
      args:
        chdir: "{{ dotfiles_path }}"

    # gpg requires an absolute path and therefore it needs to be manually symlinked
    # See: https://dev.gnupg.org/T4588
    - name: symlink pinentry-gui to /usr/local/bin
      become: true
      ansible.builtin.file:
        src: "{{ home_path }}/.bin/pinentry-gui"
        dest: /usr/local/bin/pinentry-gui
        state: link
        force: true

    - name: remove state files if they exist before running dotup
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.file:
        path: "{{ home_path }}/{{ item }}"
        state: absent
      loop:
        - .config/fish
        - .gnupg/sshcontrol

    - name: set the dotup scope
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.copy:
        dest: "{{ dotfiles_path }}/.dotup-scopes"
        content: "{{ dotup_scopes }}"

    - name: execute dotup
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.command:
        chdir: "{{ dotfiles_path }}"
        cmd: bin/dotup

    - ansible.builtin.debug: msg="After this setup, please run `update-system`"
    - ansible.builtin.debug: msg="After this setup, please import your latest backup!"
