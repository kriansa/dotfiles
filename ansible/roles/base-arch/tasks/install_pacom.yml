---
- name: check if pacom is installed
  ansible.builtin.package_facts:
    manager: pacman

- name: install pacom
  when: "'pacom' not in ansible_facts.packages"
  block:
    - name: create a temp folder to build pacom
      become: true
      ansible.builtin.file: path=/tmp/pacom state=directory mode=0755 owner={{ user_name }} group={{ user_name }}

    - name: download and extract pacom from aur
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.unarchive:
        remote_src: yes
        src: https://aur.archlinux.org/cgit/aur.git/snapshot/pacom.tar.gz
        dest: /tmp

    - name: build and install pacom
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.command: makepkg --noconfirm --noprogressbar --nocolor --force --syncdeps --install
      args:
        chdir: /tmp/pacom

    - name: remove temp folder with pacom build
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.file: path=/tmp/pacom state=absent

- name: check if pacom git database exists
  ansible.builtin.stat:
    path: "{{ home_path }}/.local/share/pacom/git-db"
  register: pacom_db

- name: create pacom git database
  when: pacom_db.stat.isdir is not defined
  block:
    - name: create folder for pacom database
      become: true
      ansible.builtin.file: path={{ item }} state=directory mode=0755 owner={{ user_name }} group={{ user_name }}
      loop:
        - "{{ user_name }}/.local/share/pacom"
        - "{{ user_name }}/.local/share/pacom/pacman-repo"

    - name: clone my pacom git db using HTTPS
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.git:
        repo: https://github.com/kriansa/pacom-git-db
        dest: "{{ user_name }}/.local/share/pacom/git-db"
        recursive: no
        depth: 1

    - name: initialize submodules for pacom git db
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.command:
        cmd: git submodule update --init --recommend-shallow --jobs 12
        chdir: "{{ user_name }}/.local/share/pacom/git-db"

    - name: update pacom remote to use SSH instead of HTTPS
      become: true
      become_user: "{{ user_name }}"
      ansible.builtin.command: git remote set-url origin git@github.com:kriansa/pacom-git-db.git
      args:
        chdir: "{{ home_path }}/.local/share/pacom/git-db"

- name: create custom pacman repository for usage with pacom
  become: true
  become_user: "{{ user_name }}"
  notify: update pacman repo db
  ansible.builtin.command: repo-add {{ home_path }}/.local/share/pacom/pacman-repo/pacom.db.tar.gz
  args:
    creates: "{{ home_path }}/.local/share/pacom/pacman-repo/pacom.db.tar.gz"

- name: add pacom repository to pacman config
  become: true
  notify: update pacman repo db
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    marker: "# Pacom repository ({mark})"
    block: |
      [pacom]
      SigLevel = Optional TrustAll
      Server = file:///{{ home_path }}/.local/share/pacom/pacman-repo

- name: build all pacom packages in the git database
  become: true
  become_user: "{{ user_name }}"
  ansible.builtin.command: pacom build -a
