---
- name: create the system-connections folder
  become: true
  ansible.builtin.file: path=/etc/NetworkManager/system-connections mode=0700 state=directory

- name: configure wifi
  become: true
  when: configure_wifi == true
  community.general.nmcli:
    state: present
    type: wifi
    autoconnect: yes
    ifname: "{{ wifi_device }}"
    conn_name: Wi-Fi
    ssid: "{{ lookup('community.general.passwordstore', 'PC-Config/Wi-Fi-SSID') }}"
    wifi:
      hidden: "{{ wifi_hidden }}"
    wifi_sec:
      key-mgmt: wpa-psk
      psk: "{{ lookup('community.general.passwordstore', 'PC-Config/Wi-Fi-Password') }}"

- name: configure wired network
  become: true
  community.general.nmcli:
    state: present
    type: ethernet
    ifname: "{{ eth_device }}"
    conn_name: Wired-Network
    method4: auto
    method6: auto

- name: remove default network
  community.general.nmcli:
    state: absent
    conn_name: Wired connection 1

- name: configure wireguard tunnels
  register: configure_connections
  ansible.builtin.template:
    src: files/connection.conf.j2
    dest: /etc/NetworkManager/system-connections/{{ item.name }}.nmconnection
    mode: "0600"
  loop:
    - name: Lab
      ifname: lab
      autoconnect: no
      private_key: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Private-Key') }}"
      addresses: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Local-IPs') }}"
      dns: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/DNS') }}"
      dns_search: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/DNS-Search-Domain') }}"
      peer_public_key: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Endpoint-Public-Key') }}"
      peer_endpoint: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Endpoint') }}"
      peer_psk: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/PSK') }}"
      peer_allowed_ips: 192.168.0.0/16;

    - name: Lab-Tunnel
      ifname: lab-tunnel
      autoconnect: no
      private_key: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Private-Key') }}"
      addresses: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Local-IPs') }}"
      dns: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/DNS') }}"
      dns_search: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/DNS-Search-Domain') }}"
      peer_public_key: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Endpoint-Public-Key') }}"
      peer_endpoint: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/Endpoint') }}"
      peer_psk: "{{ lookup('community.general.passwordstore', 'PC-Config/' + secrets_base_dir + '/VPN/PSK') }}"
      peer_allowed_ips: 0.0.0.0/0;

- name: reload NetworkManager when needed
  become: true
  when: configure_connections.changed
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted
